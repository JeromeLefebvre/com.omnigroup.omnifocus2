/*{
    "type": "action",
    "targets": ["omnifocus"],
    "author": "Jerome Lefebvre",
    "identifier": "com.jpl.newGenericProject",
    "version": "0.1",
    "description": "Create a new generic project",
    "label": "New Generic Project",
    "shortLabel": "newGenericProject"
}*/

/*
Built from a skelton taken from: 
https://omni-automation.com/ofac/index.html

*/
function getRandomInt(min, max) {
    min = Math.ceil(min);
    max = Math.floor(max);
    return Math.floor(Math.random() * (max - min + 1)) + min;
}

(() => {
    var action = new PlugIn.Action(function(selection) {
        var inputForm = new Form()
        var projectField = new Form.Field.String(
            "projectInput",
            "Name",
            "new project" + getRandomInt(1,100)
        )
        inputForm.addField(projectField)

        var goalField = new Form.Field.String(
            "goalInput",
            "Goal",
            "I want to..."
        )
        inputForm.addField(goalField)

        var tagField = new Form.Field.String(
            "tagInput",
            "Tag",
            "Home"
        )
        inputForm.addField(tagField)

        var taskField = new Form.Field.String(
            "taskInput",
            "Task",
            "I first need to.."
        )
        inputForm.addField(taskField)

        formPrompt = "Create a new project"
        formPromise = inputForm.show(formPrompt, "Continue")

        inputForm.validate = function (formObject) {
            // TODO:
            return true
        }

        formPromise.then(function (formObject) {
            var projectName = formObject.values["projectInput"];
            
            var project = projectNamed(projectName) || new Project(projectName);
            project.status = Project.Status.Active;
            project.containsSingletonActions = false;
            var tag = tagNamed(formObject.values["tagInput"])
            project.addTag(tag)
            project.note = "Goal: " + formObject.values["goalInput"]
            var task = formObject.values["taskInput"];
            var action = project.taskNamed(task) || new Task(task, project)
            project.
            document.windows[0].perspective = Perspective.BuiltIn.Projects
            document.windows[0].selectObjects([project])
        })
        formPromise.catch(function(err){
			console.log("form cancelled", err.message)
        })
        /*
        projectName = "Night time"
        var project = projectNamed(projectName) || new Project(projectName)
        project.status = Project.Status.Active
        project.containsSingletonActions = true

        const tasksName = ["Emtpy inbox", "Clean up physical desk", "Close all applications on laptop", "Inbox Zero"];

        tasksName.forEach(task =>
        {
            var action = project.taskNamed(task) || new Task(task, project)
        });
        document.windows[0].perspective = Perspective.BuiltIn.Projects
        document.windows[0].selectObjects([project])

        */
        
    });

    action.validate = function(selection){
        return true;
    };
    return action;
})();
