/*{
    "type": "action",
    "targets": ["omnifocus"],
    "author": "Jerome Lefebvre",
    "identifier": "com.jpl.newGenericProject",
    "version": "0.1",
    "description": "Create a new generic project",
    "label": "New Generic Project",
    "shortLabel": "newGenericProject"
}*/

/*
Built from a skelton taken from: 
https://omni-automation.com/ofac/index.html

*/
function getRandomInt(min, max) {
    min = Math.ceil(min);
    max = Math.floor(max);
    return Math.floor(Math.random() * (max - min + 1)) + min;
}

function tagsName(tags) {
    var tagsName = [];
    tags.forEach(tag => {
        var tagName = tag.parent ? tag.parent.name + ":" : ""
        tagName += tag.name,
        tagsName.push(tagName);
    });
    return tagsName;
}

function existingTags() {
    var existing = [];
    tags.forEach(topTag => {
        existing.push(topTag);
        topTag.tags.forEach(childrenTag => {
            existing.push(childrenTag);
        });
    });
    return existing
}

(() => {
    var action = new PlugIn.Action(function (selection) {
        var inputForm = new Form()
        var projectField = new Form.Field.String(
            "projectInput",
            "Project Name",
            "new project" + getRandomInt(1, 100)
        )
        inputForm.addField(projectField)


        console.log(tags)

        var goalField = new Form.Field.String(
            "goalInput",
            "Goal (completed when..)",
            "I want to..."
        )
        inputForm.addField(goalField)

        var tagsAsFlatList = existingTags();

        var tagField = new Form.Field.Option(
            "tagInput",
            "Tags",
            tagsAsFlatList,
            tagsName(tagsAsFlatList),
            tagsAsFlatList[1]
        )

        inputForm.addField(tagField)

        var taskField = new Form.Field.String(
            "taskInput",
            "First Task",
            "I first need to.."
        )
        inputForm.addField(taskField)

        formPrompt = "Create a new project"
        formPromise = inputForm.show(formPrompt, "Continue")

        inputForm.validate = function (formObject) {
            // TODO:
            console.log(formObject.values["projectInput"]);
            console.log(formObject.values["tagInput"]);

            return true
        }

        formPromise.then(function (formObject) {
            var projectName = formObject.values["projectInput"];

            var project = projectNamed(projectName) || new Project(projectName);
            project.status = Project.Status.Active;
            project.containsSingletonActions = false;
            var tag = formObject.values["tagInput"];
            console.log("tag selected:");
            console.log(tag);
            project.addTag(tag);
            project.note = "Goal: " + formObject.values["goalInput"]
            var task = formObject.values["taskInput"];
            var action = project.taskNamed(task) || new Task(task, project)
            project.
                document.windows[0].perspective = Perspective.BuiltIn.Projects
            document.windows[0].selectObjects([project])
        })
        formPromise.catch(function (err) {
            console.log("form cancelled", err.message)
        })
    });

    action.validate = function (selection) {
        return true;
    };
    return action;
})();
