/*{
    "author": "Jerome Lefebvre",
    "targets": ["omnifocus"],
    "type": "action",
    "identifier": "com.jpl.Open Ressource",
    "version": "0.1",
    "description": "A plug-in that opens the first linked ressource of a task, or associated project",
    "label": "Open Ressource",
    "mediumLabel": "Open Ressource",
    "paletteLabel": "Open Ressource",
}*/
(() => {
    var action = new PlugIn.Action(function(selection) {
        // Tries to open one of the following links
        // 1. attached to the task
        // 2. attached to the parent project or project if that is what is selected
        
        const {tasks, projects} = selection
        const [task, ...otherTasks] = tasks
        const [project=task.parent, ...otherProjects] = projects

        if (task) {
            if (task && task.linkedFileURLs.length) {
                task.linkedFileURLs[0].open()
                return
            }
            const taskProject = task.parent
            if (taskProject.linkedFileURLs.length) {
                taskProject.linkedFileURLs[0].open()
                return
            }
        }
        if (project) {
            if (project.linkedFileURLs.length) {
                project.linkedFileURLs[0].open()
                return
            }
        }
        //const re = /\b(?:https?:\/\/)(\S+)\b/g
        const re = /(\b(https?|ftp|file|omnifocus):\/\/\/?[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/ig;
        if (task.note && re.test(task.note)) {
            const link = task.note.match(re)[0]
            const url = URL.fromString(link)
            url.open()
            return
        }
        if (project.note && re.test(project.note)) {
            const link = project.note.match(re)[0]
            const url = URL.fromString(link)
            url.open()
            return
        }
    });

    action.validate = function(selection){        
        // tasks or projects can both be null, e.g. a folder is selected
        const {tasks, projects} = selection
        console.info(selection.projects)
        if (!tasks.length && !projects.length)
            return false
        console.info(tasks)
        console.info(projects)
        const [task, ...otherTasks] = tasks
        const [project=task.parent, ...otherProjects] = projects        
        // to check if there are any https links in a string
        const re = /(\b(https?|ftp|file|omnifocus):\/\/\/?[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/ig;
        
        return (task && task.linkedFileURLs.length) || 
               (task && task.parent && task.parent.linkedFileURLs.length) || 
               (task && task.note && re.test(task.note)) ||
               (project && project.linkedFileURLs.length) ||
               (project && project.note && re.test(project.note))
    };
    return action;
})();